apply plugin: 'com.android.library'

dependencies {
    testImplementation "androidx.appcompat:appcompat:1.0.0"
    testImplementation project(':glide:library')
//    testImplementation project(':mocks')
//    testImplementation project(':testutil')
    testImplementation 'com.google.guava:guava-testlib:18.0'
    testImplementation "com.google.truth:truth:0.45"
    testImplementation "junit:junit:4.13-beta-3"
    testImplementation "org.mockito:mockito-core:2.23.4"
    testImplementation "org.robolectric:robolectric:4.3.1"
    testImplementation "com.squareup.okhttp3:mockwebserver:3.0.0-RC1"
    testImplementation "androidx.legacy:legacy-support-v4:1.0.0"
    testImplementation "androidx.test:core:1.0.0"
}

tasks.withType(JavaCompile) {
    options.fork = true
}

afterEvaluate {
    lint.enabled = false
    compileDebugJavaWithJavac.enabled = false
}

android.testOptions.unitTests.all { Test testTask ->
    // configure max heap size of the test JVM
    testTask.maxHeapSize = "4096M"
    if (JavaVersion.current() <= JavaVersion.VERSION_1_7) {
        // Java HotSpot(TM) 64-Bit Server VM warning: ignoring option MaxPermSize=2048m; support was removed in 8.0
        testTask.jvmArgs "-XX:MaxPermSize=4096M"
    }

    // Initializing Robolectric is expensive, two threads seem to be around the only level where any
    // improvement is seen.
    testTask.maxParallelForks = 2
}

android {
    compileSdkVersion 29

    defaultConfig {
        minSdkVersion 14
        targetSdkVersion 28
        versionName "4.12.0"
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_7
        targetCompatibility JavaVersion.VERSION_1_7
    }

    testOptions.unitTests.includeAndroidResources = true

    sourceSets {
        androidTest {
            resources.srcDirs += ['../../third_party/exif_orientation_examples']
        }
        test {
            resources.srcDirs += ['../../third_party/exif_orientation_examples']
        }
    }
}
